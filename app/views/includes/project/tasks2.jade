div(class="btn-group")
	button(data-toggle="dropdown" class="btn btn-default dropdown-toggle")
		span(class="caret")
		|   
		span(class="data-label") Priority:
		|  
		span(id="priority-label" class ="data-label-placement" data-label-placement) None
	ul(class="dropdown-menu" placeholder="None")
		| <li><input type="radio" id="High" name="priority-label" value="High" onclick="filterBy(this, 'priority', 'High')"><label for="High">High</label></li>
		| <li><input type="radio" id="Medium" name="priority-label" value="Medium" onclick="filterBy(this, 'priority', 'Medium')"><label for="Medium">Medium</label></li>
		| <li><input type="radio" id="Low" name="priority-label" value="Low" onclick="filterBy(this, 'priority', 'Low')"><label for="Low">Low</label></li>
div(class="btn-group")
	button(data-toggle="dropdown" class="btn btn-default dropdown-toggle")
		span(class="caret")
		|   
		span(class="data-label") Status:
		|  
		span(id="status-label" class ="data-label-placement" data-label-placement) None
	ul(class="dropdown-menu" placeholder="None")
		| <li><input type="radio" id="Backlog" name="status-label" value="Backlog" onclick="filterBy(this, 'status', 'Backlog')"><label for="Backlog">Backlog</label></li>
		| <li><input type="radio" id="Selected" name="status-label" value="Selected" onclick="filterBy(this, 'status', 'Selected')"><label for="Selected">Selected</label></li>
		| <li><input type="radio" id="Progress" name="status-label" value="Progress" onclick="filterBy(this, 'status', 'In')"><label for="Progress">In Progress</label></li>
		| <li><input type="radio" id="Completed" name="status-label" value="Completed" onclick="filterBy(this, 'status', 'Completed')"><label for="Completed">Completed</label></li>
div(class="btn-group")
	button(data-toggle="dropdown" class="btn btn-default dropdown-toggle")
		span(class="caret")
		|   
		span(class="data-label") User:
		|  
		span(id="assignedto-label" class ="data-label-placement" data-label-placement) None
	ul(class="dropdown-menu" placeholder="None")
		each user in projMembers
			| <li><input type="radio" id=#{user.email} class="user-dropdown-name" name="assignedto-label" value=#{user.email}><label for=#{user.email}>#{user.email}</label></li>
div
	div(class="task-list-button-list")
		each task in taskList
			div(id=task.taskid class="task-list-button-element" + " " + task.taskid + " " + task.priority + " " + task.assignedto + " " + task.status onclick="pressButton(\"" + task.taskid + "\")")
				div(class = "nowrap")
					p(class="nowrap") #{task.taskid}  #{task.taskname}
				div
					p(class = "js-clamp") #{task.taskdescription}
	div(class="task-list-display-list")
		each task in taskList
			div(id=task.taskid class="task-list-display-element")
				div
					h1
						a(href="t/"+task.taskid+"/" ) #{task.taskid}  #{task.taskname}
				div
					h2 Created by: #{task.createdby}
					h2 Assigned to: #{task.assignedto}
				div
					h3 Status: #{task.status}
					h3 Date created: #{task.datecreated}
					h3 Priority: #{task.priority}
					h3 Issue type: #{task.issuetype}
			
	
block scripts
	script.
		var task = function(id, priority, assignedto, status) {
			this.id = id;
			this.priority = priority;
			this.assignedto = assignedto;
			this.status = status;
		}
		var booRadio = null;
		var taskButtons = document.getElementsByClassName("task-list-button-element");
		var taskDisplays = document.getElementsByClassName("task-list-display-element");
		var selectedTask = "";
		var tasksNormal = new Array();
		var tasksSorted = new Array();
		var filters = new Array();
		filters["priority"] = "None"
		filters["status"] = "None";
		filters["assignedto"] = "None";
		for(var i = 0; i < taskButtons.length; i++) {
			tasksNormal.push(new task(taskButtons[i].classList.item(1), taskButtons[i].classList.item(2), taskButtons[i].classList.item(3), taskButtons[i].classList.item(4)));
		}
			
		var emails = document.getElementsByClassName("user-dropdown-name");
		for(var i = 0; i < emails.length; i++) {
			var id = emails[i].id;
			var elem = emails[i];
			emails[i].onclick = (function(element, filterType, filterSubType) {
				return function() {
					filterBy(element, filterType, filterSubType);
				}
			})(emails[i], "assignedto", emails[i].id);
		}
		
		var pressButton = function(pressID) {
			var selected = selectedTask;
			for(var i = 0; i < taskDisplays.length; i++) {
				if(taskDisplays[i].id == pressID) {
					taskDisplays[i].style.display = "initial";
					selectedTask = pressID;
				}
				if(taskDisplays[i].id == selected) {
					taskDisplays[i].style.display = "none";
					selectedTask = "";
				}
			}

			//$("#RUNE-013").insertAfter($("#RUNE-016"));
		}

		var filterBy = function(element, filterType, filterSubType) {
			pressButton(selectedTask);
			if(booRadio == element) {
				element.checked = false;
				document.getElementById(booRadio.name).innerHTML = booRadio.parentNode.parentNode.getAttribute("placeholder");
				booRadio = null;
				filters[filterType] = "None";
			}
			else {
				booRadio = element;
				filters[filterType] = filterSubType;
			}
			filter();
		}
		
		var filter = function() {
			for(var i = 0; i < taskButtons.length; i++)
			{
				taskButtons[i].style.display = "";
			}
			for(var currFilter in filters)
			{
				if(filters[currFilter] != "None")
				{
					for(var i = 0; i < tasksNormal.length; i++)
					{
						if(eval("tasksNormal[i]." + currFilter) != filters[currFilter])
						{
							taskButtons[i].style.display = "none";
						}
					}
				}
			}
		}